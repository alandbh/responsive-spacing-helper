/*
Responsive Spacing Helper v0.1 - By Alan Vasconcelos (https://github.com/alandbh/)
-----------------------------------
https://github.com/alandbh/responsive-spacing-helper


This SASS function will create "margin helpers" and "padding helpers" based on the screen size, which is named following Twitter's Bootstrap pattern.

The class-name is composed by 4 parameters, separated by dash "-":

--> property-direction-screenSize-amount <--

The first letter (parameter) can be "m" or "p" for MARGIN or PADDING.
The second parameter can be "t", "b", "l", or "r" for TOP, BOTTOM, LEFT, or RIGHT
The third parameter can be "xs", "sm" or "md" for EXTRA-SMALL, SMALL or MEDIUM screens.
The fourth parameter is the number of spacing in pixels. Adjust the amounts generated by editing the $spaceamounts variable below.

Examples of margin:
class="m-r-sm-10"   ---> applies margin-right 10 pixels for SMALL screens and higher.
class="m-r-md-15"   ---> applies margin-right 15 pixels for MEDIUM screens and higher.

Examples of padding:
class="p-b-sm-5"    ---> applies padding-bottom 5 pixels for SMALL screens and higher.
class="p-l-md-40    ---> applies padding-left 40 pixels for MEDIUM screens and higher.

The "...-xs-..." parameter applies the margin/padding for all screen sizes.

This script was inspired by the great work of: 
1- _spacing-helpers.scss (https://gist.github.com/jacurtis/30da4bf9a6c9b9b5cc0aebac512ca7c9) and 
2- ez-space-css-repo (https://github.com/dmanzer2/ez-space-css-repo).

*/

$spaceamounts: (5, 10, 15, 20, 30, 40, 50, 80, 100); // Adjust this to include the pixel amounts you need.
$screens: (xs, sm, md); // Leave this variable alone
$sides: (top, bottom, left, right); // Leave this variable alone

// Shorthand for margin and padding for all directions
@each $space in $spaceamounts {
  .m-#{$space} {
    margin: #{$space}px;
  }

  .p-#{$space} {
    padding: #{$space}px;
  }
}

// Responsive classes
@each $screen in $screens {

  @if $screen == xs {

    @each $space in $spaceamounts {
      @each $side in $sides {
        .m-#{str-slice($side, 0, 1)}-#{$screen}-#{$space} {
          margin-#{$side}: #{$space}px;
        }
      
        .p-#{str-slice($side, 0, 1)}-#{$screen}-#{$space} {
          padding-#{$side}: #{$space}px;
        }
      }
    }

  }
  
  @if $screen == sm {
    @media (min-width: 480px) {

      @each $space in $spaceamounts {
        @each $side in $sides {
          .m-#{str-slice($side, 0, 1)}-#{$screen}-#{$space} {
            margin-#{$side}: #{$space}px;
          }
        
          .p-#{str-slice($side, 0, 1)}-#{$screen}-#{$space} {
            padding-#{$side}: #{$space}px;
          }
        }
      }

    }
  }
  
  @if $screen == md {
    @media (min-width: 768px) {

      @each $space in $spaceamounts {
        @each $side in $sides {
          .m-#{str-slice($side, 0, 1)}-#{$screen}-#{$space} {
            margin-#{$side}: #{$space}px;
          }
        
          .p-#{str-slice($side, 0, 1)}-#{$screen}-#{$space} {
            padding-#{$side}: #{$space}px;
          }
        }
      }

    }
  }
  
}
